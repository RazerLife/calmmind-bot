import asyncio
import logging
from aiogram import Bot
from config import BOT_TOKEN
from apscheduler.triggers.cron import CronTrigger
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from utils.users import load_users
from utils.quotes import get_quote

logging.basicConfig(level=logging.INFO)

bot = Bot(token=BOT_TOKEN)
USER_IDS = load_users()

# –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏ —Ü–∏—Ç–∞—Ç–æ–π
async def send_reminder():
    keyboard = InlineKeyboardMarkup(row_width=3)
    keyboard.add(
        InlineKeyboardButton("üôÇ", callback_data="mood_good"),
        InlineKeyboardButton("üòê", callback_data="mood_neutral"),
        InlineKeyboardButton("üòü", callback_data="mood_bad")
    )
    quote = get_quote()

    for uid in USER_IDS:
        try:
            await bot.send_message(
                uid,
                f"üåû –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! üíõ\n\n{quote}\n\n–ö–∞–∫ —Ç—ã —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—à—å —Å–µ–π—á–∞—Å?",
                reply_markup=keyboard
            )
        except Exception as e:
            logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å {uid}: {e}")

    await bot.session.close()

if __name__ == "__main__":
    asyncio.run(send_reminder())


